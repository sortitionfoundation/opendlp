services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    environment:
      - DB_HOST=postgres
      - PYTHONUNBUFFERED=1
    # define DB_PASSWORD in the .env file
    env_file:
      - .env
      - .env.prod
    ports:
      - "8080:8080"
    entrypoint: /app/bin/gunicorn
    command:
      - --bind=0.0.0.0:8080
      - --log-level=info
      - "opendlp.entrypoints.flask_app:create_app()"
    networks:
      - opendlp_prod_net
    restart: always

  app_celery:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    environment:
      - DB_HOST=postgres
      - PYTHONUNBUFFERED=1
    # define DB_PASSWORD in the .env file
    env_file:
      - .env
      - .env.prod
    entrypoint: /app/bin/celery
    command:
      - --app=opendlp.entrypoints.celery.tasks
      - worker
      - --loglevel=info
    networks:
      - opendlp_prod_net
    restart: always

  postgres:
    image: postgres:16
    environment:
      - POSTGRES_USER=opendlp
    # define POSTGRES_PASSWORD in the .env file
    env_file:
      - .env
      - .env.prod
    volumes:
      - sqla_opendlp_prod_pgdata:/var/lib/postgresql/data
    networks:
      - opendlp_prod_net
    restart: always

  redis:
    image: redis:alpine
    networks:
      - opendlp_prod_net
    restart: always

networks:
  opendlp_prod_net:

volumes:
  sqla_opendlp_prod_pgdata:
