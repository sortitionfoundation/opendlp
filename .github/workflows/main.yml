name: Main

on:
  push:
    paths:
      - "backend/**"
      - ".github/**"
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  quality:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Check out
        uses: actions/checkout@v5

      - uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env
        with:
          working-directory: ./backend

      - uses: extractions/setup-just@v3

      - name: Run checks
        run: just check

  tests-and-type-check:
    runs-on: ubuntu-latest
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_DB: opendlp
          POSTGRES_USER: opendlp
          POSTGRES_PASSWORD: abc123
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 54322:5432
    defaults:
      run:
        working-directory: ./backend
        shell: bash
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
      fail-fast: false
    steps:
      - name: Check out
        uses: actions/checkout@v5

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: ${{ matrix.python-version }}
          working-directory: ./backend

      - name: Run tests
        env:
          DB_HOST: localhost
          DB_PORT: 54322
          DB_NAME: opendlp
        run: uv run python -m pytest tests --ignore tests/bdd --cov --cov-config=pyproject.toml --cov-report=xml

      - name: Check typing
        run: uv run mypy

      - name: Upload coverage reports to Codecov with GitHub Action on Python 3.11
        uses: codecov/codecov-action@v5
        if: ${{ matrix.python-version == '3.11' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
